/*
## Get Changed Files

Returns a list of changed files since a given timestamp.

Parameter | Description
----------|----------
RefDate | Files changed (release date) after this date will be collected. Format: Microsoft JSON-Date.
DocTypeIDs | specify doctypes as filter or leave empty to query all doctypes
ValidStatusID | specify status IDs or leave empty to accept any status. e.g. only released documents = [130]
*/
# Create Microsoft JSON Date Format \/Date(1751491200000+0200)\/ 

{{
  // Create current date
  const date = new Date()

  // current date for reference
  const refDate = new Date();
  // 14 days ago
  refDate.setDate(refDate.getDate() - 14); 
  // Set to midnight
  refDate.setHours(0, 0, 0, 0); // set time to midnight

  // use timestamp for request
  const timestamp = refDate.getTime(); // final {{$timestamp}}

  const offsetMin = -date.getTimezoneOffset(); // e.g. +120
  const sign = offsetMin >= 0 ? '+' : '-';
  const hours = String(Math.floor(Math.abs(offsetMin) / 60)).padStart(2, '0');
  const minutes = String(Math.abs(offsetMin) % 60).padStart(2, '0');
  const offset = `${sign}${hours}${minutes}`;

  // Microsoft JSON Date Format
  exports.RefDate = `\\/Date(${timestamp}${offset})\\/`;
}}
###
# @import ./Authenticate.http
# @ref authentication
POST /GetChangedFiles
Accept: application/json
Content-Type: application/json
authtoken: {{authentication.LoginToken}}

{
    "RefDate": "{{RefDate}}",
    "DocTypeIDs":[],
    "ValidStatusIDs":[130]
}